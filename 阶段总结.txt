
复习

前端
	html:
		html,body,p,div,span,ul,li, a, img, b,strong,table,form,input, button...
	css:
		盒模型：width, height, border, padding, margin
		字体：font: font-size, font-family
		颜色:backgroud, color: #FFCC44/rgb(200,100,33)/rgba(1,2,3,0.5)/red
		浮动：float left/right/none, 
			清浮动：clear: both, overflow:hidden
		定位：
			position: absolute/relative/fixed/static
		显示隐藏： display: none/block
		文本： text-align: center, line-height:30px
	JS:
		ECMAScript:
			变量: var age = 10 
			数据类型(Number, Boolean, String, Array, Object., Undefined, Null...)，
			运算符： 
				和Python相比，多了一元运算符：a++, ++a, a--,--a 
								  三目运算符: ?:
								  逻辑运算符：&&  || !
			分支: if， if-else if -else
			循环: for-in
			函数: 
			定时器： setInterval 
			类、构造函数
		BOM
		DOM：
			获取元素：
				getElementById, getElementsByTagName, 
				getElementsByName, getElementsByClassName
			元素节点对象的属性和方法：
				innerHTML, value, className, style, id, tagName, src..
				offsetLeft, offsetTop, offsetWidth, offsetHeight
				children, parentNode
			DOM操作（节点操作）
				createElement()
				appendChild()
				removeChild()
				remove()
				cloneNode(true)
		事件：
			this关键字
			鼠标事件：
				click, mousedown, mousemove,mouseup, mouseenter,mouseleave
			键盘事件：
				keydown, keyup, keypress
			html事件：
				onload, onscroll, onresize, onfocus, onblur, onchange
		
	JQ
		写法：
			$(function(){})
		JQ选择器
			$('#box'), $('.class'), $('div'), $('#box div') $('#box > div')
		JQ的属性：
			length / size()
		JQ的方法：
			筛选：
				eq(), first(), last(), index(), parent(), parents(), find(), children(), siblings()
			属性：
				addClass(), removeClass(), html(), val(), attr(), removeAttr()
			DOM操作：
				$("<div></div>"), append(), appendTo(), remove(), clone(true)
			CSS: 
				css(), scrollTop(), width(), height()
			事件：
				大部分和JS事件类似，
				trigger(), triggerHandler()
				on(), off()
			效果：
				show(), hide(), fadeIn(), fadeOut()
				animate(), stop()
			Ajax:
				$.ajax({
					type: "get",
					url: url,
					data: {},
					async: true,
					success: function(data){},
					error: function(e){}
				})
				$.get(url, {}, function(data){})
				$.post(url, {}, function(data){})
			
	Bootstrap:
		全局CSS样式
		
	Vue:
		框架模式： 
			MVVM (MVC => MV VM)
		模板：
			数据渲染 v-text、v-html、{{}}
			控制模块显示隐藏 v-if、v-show,
			渲染循环列表 v-for
			事件绑定 v-on , 简写：@click
			属性绑定 v-bind, 简写：:src=
			双向数据绑定 v-model, 一般用于输入框
		vue重要选项：
			el: 挂载元素
			data: 数据属性
			methods: 方法
			computed: 计算属性
			watch: 监听属性
		组件传参:
			父组件=>子组件：用自定义属性v-bind(:)
			子组件=>父组件：用自定义事件v-on(@)
		路由router:
			指定路由规则：通过不同的path指向不同的组件
		Axios：
			类似Ajax， 在前端请求后台
		
		
Linux:
	命令
	
Git:
	命令
	本地仓库:
		git init
		git add .
		git commit -m ""
		git diff
		git status
		(了解)git reset HEAD .
		git reset --hard HEAD^
		git log --pretty=oneline
		git reflog
	远程仓库:
		git clone url
		git push origin master
		git pull origin master
		git remote add origin url
		git remote rm origin
	分支：
		git branch dev
		git checkout -b dev
		git checkout dev
		git merge dev
	
MySQL:
	SQL语句：
		DDL:
			alter,create,drop.. 
		数据操作：
			增：insert into user() values()
			删：delete from user where name=''
			改: update user set age=1 where name=""
			查：select * from user
				select name,age from user
				select * from user where age>30
				select * from user where age>30 group by class 
				select * from user where age>30 group by class having count(*)>3 
				select * from user where age>30 group by class having count(*)>3 order by age desc 
				select * from user where age>30 group by class having count(*)>3 order by age desc limit 3,3
	Python操作MySQL
		
Redis:
	五种数据类型：
		string字符串， hash(字典)，list列表，set集合，zset有序集合
	Python操作Redis
		
MongoDB:
	基本操作
	Python操作MongoDB
		
		
sql和nosql的区别：
	关系型数据库和非关系型数据库的区别
		
		
		
		
		
		
		